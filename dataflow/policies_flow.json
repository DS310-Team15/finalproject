{
	"name": "policies_flow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "covidpolicyParquetcosmosdb",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Parquet6",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          CountryName as string,",
				"          CountryCode as string,",
				"          RegionName as string,",
				"          RegionCode as string,",
				"          Jurisdiction as string,",
				"          Date as timestamp,",
				"          C1_School_closing as string,",
				"          C1_Flag as integer,",
				"          C2_Workplace_closing as string,",
				"          C2_Flag as long,",
				"          C3_Cancel_public_events as string,",
				"          C3_Flag as long,",
				"          C4_Restrictions_on_gatherings as string,",
				"          C4_Flag as long,",
				"          C5_Close_public_transport as string,",
				"          C5_Flag as long,",
				"          C6_Stay_at_home_requirements as string,",
				"          C6_Flag as long,",
				"          C7_Restrictions_on_internal_movement as string,",
				"          C7_Flag as long,",
				"          C8_International_travel_controls as string,",
				"          E1_Income_support as string,",
				"          E1_Flag as long,",
				"          E2_Debt_contract_relief as string,",
				"          E3_Fiscal_measures as decimal(38,18),",
				"          E4_International_support as decimal(38,18),",
				"          H1_Public_information_campaigns as decimal(38,18),",
				"          H1_Flag as long,",
				"          H2_Testing_policy as string,",
				"          H3_Contact_tracing as string,",
				"          H4_Emergency_investment_in_healthcare as decimal(38,18),",
				"          H5_Investment_in_vaccines as string,",
				"          H6_Facial_Coverings as string,",
				"          H6_Flag as long,",
				"          H7_Vaccination_policy as string,",
				"          H7_Flag as long,",
				"          H8_Protection_of_elderly_people as string,",
				"          H8_Flag as long,",
				"          M1_Wildcard as long,",
				"          StringencyIndex as decimal(38,18),",
				"          StringencyIndexForDisplay as decimal(38,18),",
				"          StringencyLegacyIndex as decimal(38,18),",
				"          StringencyLegacyIndexForDisplay as decimal(38,18),",
				"          GovernmentResponseIndex as decimal(38,18),",
				"          GovernmentResponseIndexForDisplay as decimal(38,18),",
				"          ContainmentHealthIndex as decimal(38,18),",
				"          ContainmentHealthIndexForDisplay as decimal(38,18),",
				"          EconomicSupportIndex as decimal(38,18),",
				"          EconomicSupportIndexForDisplay as decimal(38,18),",
				"          id as string,",
				"          rid as string,",
				"          self as string,",
				"          etag as string,",
				"          attachments as string,",
				"          ts as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'parquet') ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Country as string,",
				"          CountryCode as string,",
				"          Latitude as decimal(10,5),",
				"          Longitude as decimal(10,5),",
				"          ID as integer,",
				"          Updated as date,",
				"          Confirmed as integer,",
				"          Confirmed_Change as integer,",
				"          Deaths as integer,",
				"          Deaths_Change as integer,",
				"          Recovered as integer,",
				"          Recovered_Change as integer,",
				"          ISO2 as string,",
				"          ISO3 as string,",
				"          Country_Region as string,",
				"          load_time as timestamp,",
				"          DateKey as integer,",
				"          FullDate as date,",
				"          isWeekDay as boolean,",
				"          DayOfWeek as integer,",
				"          DayOfMonth as integer,",
				"          DayOfQuarter as integer,",
				"          DayOfYear as integer,",
				"          DayName as string,",
				"          WeekOfYear as integer,",
				"          WeekName as string,",
				"          MonthOfYear as integer,",
				"          MonthName as string,",
				"          CalendarQuarter as integer,",
				"          CalendarQuarterName as string,",
				"          CalendarYear as integer,",
				"          FiscalMonth as integer,",
				"          FiscalMonthName as string,",
				"          FiscalQuarter as integer,",
				"          FiscalQuarterName as string,",
				"          FiscalYear as integer",
				"     ),",
				"     format: 'parquet',",
				"     partitionFileNames:['policies.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}