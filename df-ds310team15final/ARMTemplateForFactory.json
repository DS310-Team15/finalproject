{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-ds310team15final"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"CosmosDbNoSql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbNoSql1'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"testAzureDataLakeStorage1test_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'testAzureDataLakeStorage1test'"
		},
		"testAzureDataLakeStorage1test_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ds310team15final.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/cases_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "cases_flow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/cases_flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/challenge-1-data-landing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Azure SQL Country",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "countryParquetazsql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Azure SQL Covid 19 Metrics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "Confirmed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Confirmed",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Confirmed_Change",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Confirmed_Change",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Deaths",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Deaths",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Deaths_Change",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Deaths_Change",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Recovered",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Recovered",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Recovered_Change",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Recovered_Change",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "ISO2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ISO2",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ISO3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ISO3",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Country_Region",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Country_Region",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "load_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "load_time",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "covid19metricsParquetazsql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Azure SQL Dates",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DateKey",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FullDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "FullDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "isWeekDay",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "isWeekDay",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "DayOfWeek",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfWeek",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayOfMonth",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfMonth",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayOfQuarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfQuarter",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayOfYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DayName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "WeekOfYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WeekOfYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "WeekName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WeekName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "MonthOfYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MonthOfYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "MonthName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MonthName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CalendarQuarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CalendarQuarter",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "CalendarQuarterName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CalendarQuarterName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CalendarYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CalendarYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalMonth",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FiscalMonth",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalMonthName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FiscalMonthName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FiscalQuarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FiscalQuarter",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalQuarterName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FiscalQuarterName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FiscalYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FiscalYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "datesParquetazsql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Cosmos DB Covid Policy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"preferredRegions": []
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['CountryName']"
										},
										"sink": {
											"name": "CountryName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CountryCode']"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['RegionName']"
										},
										"sink": {
											"name": "RegionName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['RegionCode']"
										},
										"sink": {
											"name": "RegionCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Jurisdiction']"
										},
										"sink": {
											"name": "Jurisdiction"
										}
									},
									{
										"source": {
											"path": "$['Date']"
										},
										"sink": {
											"name": "Date"
										}
									},
									{
										"source": {
											"path": "$['C1_School_closing']"
										},
										"sink": {
											"name": "C1_School_closing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C1_Flag']"
										},
										"sink": {
											"name": "C1_Flag",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['C2_Workplace_closing']"
										},
										"sink": {
											"name": "C2_Workplace_closing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C2_Flag']"
										},
										"sink": {
											"name": "C2_Flag"
										}
									},
									{
										"source": {
											"path": "$['C3_Cancel_public_events']"
										},
										"sink": {
											"name": "C3_Cancel_public_events",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C3_Flag']"
										},
										"sink": {
											"name": "C3_Flag"
										}
									},
									{
										"source": {
											"path": "$['C4_Restrictions_on_gatherings']"
										},
										"sink": {
											"name": "C4_Restrictions_on_gatherings",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C4_Flag']"
										},
										"sink": {
											"name": "C4_Flag"
										}
									},
									{
										"source": {
											"path": "$['C5_Close_public_transport']"
										},
										"sink": {
											"name": "C5_Close_public_transport",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C5_Flag']"
										},
										"sink": {
											"name": "C5_Flag"
										}
									},
									{
										"source": {
											"path": "$['C6_Stay_at_home_requirements']"
										},
										"sink": {
											"name": "C6_Stay_at_home_requirements",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C6_Flag']"
										},
										"sink": {
											"name": "C6_Flag"
										}
									},
									{
										"source": {
											"path": "$['C7_Restrictions_on_internal_movement']"
										},
										"sink": {
											"name": "C7_Restrictions_on_internal_movement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C7_Flag']"
										},
										"sink": {
											"name": "C7_Flag"
										}
									},
									{
										"source": {
											"path": "$['C8_International_travel_controls']"
										},
										"sink": {
											"name": "C8_International_travel_controls",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['E1_Income_support']"
										},
										"sink": {
											"name": "E1_Income_support",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['E1_Flag']"
										},
										"sink": {
											"name": "E1_Flag"
										}
									},
									{
										"source": {
											"path": "$['E2_Debt_contract_relief']"
										},
										"sink": {
											"name": "E2_Debt_contract_relief",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['E3_Fiscal_measures']"
										},
										"sink": {
											"name": "E3_Fiscal_measures",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['E4_International_support']"
										},
										"sink": {
											"name": "E4_International_support",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['H1_Public_information_campaigns']"
										},
										"sink": {
											"name": "H1_Public_information_campaigns",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['H1_Flag']"
										},
										"sink": {
											"name": "H1_Flag"
										}
									},
									{
										"source": {
											"path": "$['H2_Testing_policy']"
										},
										"sink": {
											"name": "H2_Testing_policy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H3_Contact_tracing']"
										},
										"sink": {
											"name": "H3_Contact_tracing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H4_Emergency_investment_in_healthcare']"
										},
										"sink": {
											"name": "H4_Emergency_investment_in_healthcare",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['H5_Investment_in_vaccines']"
										},
										"sink": {
											"name": "H5_Investment_in_vaccines",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H6_Facial_Coverings']"
										},
										"sink": {
											"name": "H6_Facial_Coverings",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H6_Flag']"
										},
										"sink": {
											"name": "H6_Flag"
										}
									},
									{
										"source": {
											"path": "$['H7_Vaccination_policy']"
										},
										"sink": {
											"name": "H7_Vaccination_policy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H7_Flag']"
										},
										"sink": {
											"name": "H7_Flag"
										}
									},
									{
										"source": {
											"path": "$['H8_Protection_of_elderly_people']"
										},
										"sink": {
											"name": "H8_Protection_of_elderly_people",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H8_Flag']"
										},
										"sink": {
											"name": "H8_Flag"
										}
									},
									{
										"source": {
											"path": "$['M1_Wildcard']"
										},
										"sink": {
											"name": "M1_Wildcard"
										}
									},
									{
										"source": {
											"path": "$['StringencyIndex']"
										},
										"sink": {
											"name": "StringencyIndex",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['StringencyIndexForDisplay']"
										},
										"sink": {
											"name": "StringencyIndexForDisplay",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['StringencyLegacyIndex']"
										},
										"sink": {
											"name": "StringencyLegacyIndex",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['StringencyLegacyIndexForDisplay']"
										},
										"sink": {
											"name": "StringencyLegacyIndexForDisplay",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['GovernmentResponseIndex']"
										},
										"sink": {
											"name": "GovernmentResponseIndex",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['GovernmentResponseIndexForDisplay']"
										},
										"sink": {
											"name": "GovernmentResponseIndexForDisplay",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['ContainmentHealthIndex']"
										},
										"sink": {
											"name": "ContainmentHealthIndex",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['ContainmentHealthIndexForDisplay']"
										},
										"sink": {
											"name": "ContainmentHealthIndexForDisplay",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['EconomicSupportIndex']"
										},
										"sink": {
											"name": "EconomicSupportIndex",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['EconomicSupportIndexForDisplay']"
										},
										"sink": {
											"name": "EconomicSupportIndexForDisplay",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"path": "$['rid']"
										},
										"sink": {
											"name": "rid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['self']"
										},
										"sink": {
											"name": "self",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['etag']"
										},
										"sink": {
											"name": "etag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['attachments']"
										},
										"sink": {
											"name": "attachments",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ts']"
										},
										"sink": {
											"name": "ts",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "covidpolicyParquetcosmosdb",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SQL VM 1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VMSqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vmParquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SQL VM 2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "Confirmed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Confirmed",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Confirmed_Change",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Confirmed_Change",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Deaths",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Deaths",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Deaths_Change",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Deaths_Change",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Recovered",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Recovered",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Recovered_Change",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Recovered_Change",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "ISO2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ISO2",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ISO3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ISO3",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Country_Region",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Country_Region",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "load_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "load_time",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VMSqlServerTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vmParquet2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SQL VM 3",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DateKey",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FullDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "FullDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "isWeekDay",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "isWeekDay",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "DayOfWeek",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfWeek",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayOfMonth",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfMonth",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayOfQuarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfQuarter",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayOfYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DayName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "WeekOfYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WeekOfYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "WeekName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WeekName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "MonthOfYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MonthOfYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "MonthName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MonthName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CalendarQuarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CalendarQuarter",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "CalendarQuarterName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CalendarQuarterName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CalendarYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CalendarYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalMonth",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FiscalMonth",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalMonthName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FiscalMonthName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FiscalQuarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FiscalQuarter",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalQuarterName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FiscalQuarterName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FiscalYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FiscalYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VMSqlServerTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vmParquet3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-15T19:02:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/countryParquetazsql')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/covid19metricsParquetazsql')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/datesParquetazsql')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer1')]",
				"[concat(variables('factoryId'), '/datasets/covidpolicyParquetcosmosdb')]",
				"[concat(variables('factoryId'), '/datasets/VMSqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/vmParquet1')]",
				"[concat(variables('factoryId'), '/datasets/VMSqlServerTable2')]",
				"[concat(variables('factoryId'), '/datasets/vmParquet2')]",
				"[concat(variables('factoryId'), '/datasets/VMSqlServerTable3')]",
				"[concat(variables('factoryId'), '/datasets/vmParquet3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dates_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dates_flow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dates_flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deaths_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "deaths_flow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/deaths_flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "CountryCode",
						"type": "varchar"
					},
					{
						"name": "Latitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Country"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "date"
					},
					{
						"name": "Confirmed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Confirmed_Change",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deaths",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deaths_Change",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recovered",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recovered_Change",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Latitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "ISO2",
						"type": "varchar"
					},
					{
						"name": "ISO3",
						"type": "varchar"
					},
					{
						"name": "Country_Region",
						"type": "varchar"
					},
					{
						"name": "load_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Covid19_Metrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FullDate",
						"type": "date"
					},
					{
						"name": "isWeekDay",
						"type": "bit"
					},
					{
						"name": "DayOfWeek",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayOfMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayOfQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayOfYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayName",
						"type": "varchar"
					},
					{
						"name": "WeekOfYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WeekName",
						"type": "varchar"
					},
					{
						"name": "MonthOfYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MonthName",
						"type": "varchar"
					},
					{
						"name": "CalendarQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CalendarQuarterName",
						"type": "varchar"
					},
					{
						"name": "CalendarYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalMonthName",
						"type": "varchar"
					},
					{
						"name": "FiscalQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalQuarterName",
						"type": "varchar"
					},
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dates"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainer1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbNoSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"CountryName": {
							"type": "string"
						},
						"CountryCode": {
							"type": "string"
						},
						"RegionName": {
							"type": "null"
						},
						"RegionCode": {
							"type": "null"
						},
						"Jurisdiction": {
							"type": "string"
						},
						"Date": {
							"type": "string"
						},
						"C1_School closing": {
							"type": "integer"
						},
						"C1_Flag": {
							"type": "integer"
						},
						"C2_Workplace closing": {
							"type": "integer"
						},
						"C2_Flag": {
							"type": "integer"
						},
						"C3_Cancel public events": {
							"type": "integer"
						},
						"C3_Flag": {
							"type": "integer"
						},
						"C4_Restrictions on gatherings": {
							"type": "integer"
						},
						"C4_Flag": {
							"type": "integer"
						},
						"C5_Close public transport": {
							"type": "integer"
						},
						"C5_Flag": {
							"type": "integer"
						},
						"C6_Stay at home requirements": {
							"type": "integer"
						},
						"C6_Flag": {
							"type": "integer"
						},
						"C7_Restrictions on internal movement": {
							"type": "integer"
						},
						"C7_Flag": {
							"type": "integer"
						},
						"C8_International travel controls": {
							"type": "integer"
						},
						"E1_Income support": {
							"type": "integer"
						},
						"E1_Flag": {
							"type": "integer"
						},
						"E2_Debt contract relief": {
							"type": "integer"
						},
						"E3_Fiscal measures": {
							"type": "integer"
						},
						"E4_International support": {
							"type": "integer"
						},
						"H1_Public information campaigns": {
							"type": "integer"
						},
						"H1_Flag": {
							"type": "integer"
						},
						"H2_Testing policy": {
							"type": "integer"
						},
						"H3_Contact tracing": {
							"type": "integer"
						},
						"H4_Emergency investment in healthcare": {
							"type": "integer"
						},
						"H5_Investment in vaccines": {
							"type": "integer"
						},
						"H6_Facial Coverings": {
							"type": "integer"
						},
						"H6_Flag": {
							"type": "integer"
						},
						"H7_Vaccination policy": {
							"type": "integer"
						},
						"H7_Flag": {
							"type": "integer"
						},
						"H8_Protection of elderly people": {
							"type": "integer"
						},
						"H8_Flag": {
							"type": "integer"
						},
						"M1_Wildcard": {
							"type": "integer"
						},
						"StringencyIndex": {
							"type": "integer"
						},
						"StringencyIndexForDisplay": {
							"type": "integer"
						},
						"StringencyLegacyIndex": {
							"type": "integer"
						},
						"StringencyLegacyIndexForDisplay": {
							"type": "integer"
						},
						"GovernmentResponseIndex": {
							"type": "integer"
						},
						"GovernmentResponseIndexForDisplay": {
							"type": "integer"
						},
						"ContainmentHealthIndex": {
							"type": "integer"
						},
						"ContainmentHealthIndexForDisplay": {
							"type": "integer"
						},
						"EconomicSupportIndex": {
							"type": "integer"
						},
						"EconomicSupportIndexForDisplay": {
							"type": "integer"
						}
					}
				},
				"typeProperties": {
					"collectionName": "covidpolicy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbNoSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "testAzureDataLakeStorage1test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "team15ods"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/testAzureDataLakeStorage1test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "testAzureDataLakeStorage1test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "team15ods"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/testAzureDataLakeStorage1test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "testAzureDataLakeStorage1test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "team15ods"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Country",
						"type": "UTF8"
					},
					{
						"name": "CountryCode",
						"type": "UTF8"
					},
					{
						"name": "Latitude",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "ID",
						"type": "INT32"
					},
					{
						"name": "Updated",
						"type": "DATE"
					},
					{
						"name": "Confirmed",
						"type": "INT32"
					},
					{
						"name": "Confirmed_Change",
						"type": "INT32"
					},
					{
						"name": "Deaths",
						"type": "INT32"
					},
					{
						"name": "Deaths_Change",
						"type": "INT32"
					},
					{
						"name": "Recovered",
						"type": "INT32"
					},
					{
						"name": "Recovered_Change",
						"type": "INT32"
					},
					{
						"name": "ISO2",
						"type": "UTF8"
					},
					{
						"name": "ISO3",
						"type": "UTF8"
					},
					{
						"name": "Country_Region",
						"type": "UTF8"
					},
					{
						"name": "load_time",
						"type": "INT96"
					},
					{
						"name": "DateKey",
						"type": "INT32"
					},
					{
						"name": "FullDate",
						"type": "DATE"
					},
					{
						"name": "isWeekDay",
						"type": "BOOLEAN"
					},
					{
						"name": "DayOfWeek",
						"type": "INT32"
					},
					{
						"name": "DayOfMonth",
						"type": "INT32"
					},
					{
						"name": "DayOfQuarter",
						"type": "INT32"
					},
					{
						"name": "DayOfYear",
						"type": "INT32"
					},
					{
						"name": "DayName",
						"type": "UTF8"
					},
					{
						"name": "WeekOfYear",
						"type": "INT32"
					},
					{
						"name": "WeekName",
						"type": "UTF8"
					},
					{
						"name": "MonthOfYear",
						"type": "INT32"
					},
					{
						"name": "MonthName",
						"type": "UTF8"
					},
					{
						"name": "CalendarQuarter",
						"type": "INT32"
					},
					{
						"name": "CalendarQuarterName",
						"type": "UTF8"
					},
					{
						"name": "CalendarYear",
						"type": "INT32"
					},
					{
						"name": "FiscalMonth",
						"type": "INT32"
					},
					{
						"name": "FiscalMonthName",
						"type": "UTF8"
					},
					{
						"name": "FiscalQuarter",
						"type": "INT32"
					},
					{
						"name": "FiscalQuarterName",
						"type": "UTF8"
					},
					{
						"name": "FiscalYear",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/testAzureDataLakeStorage1test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VMSqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "CountryCode",
						"type": "varchar"
					},
					{
						"name": "Latitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Country"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VMSqlServerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "date"
					},
					{
						"name": "Confirmed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Confirmed_Change",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deaths",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deaths_Change",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recovered",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recovered_Change",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Latitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "ISO2",
						"type": "varchar"
					},
					{
						"name": "ISO3",
						"type": "varchar"
					},
					{
						"name": "Country_Region",
						"type": "varchar"
					},
					{
						"name": "load_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Covid19_Metrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VMSqlServerTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FullDate",
						"type": "date"
					},
					{
						"name": "isWeekDay",
						"type": "bit"
					},
					{
						"name": "DayOfWeek",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayOfMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayOfQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayOfYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayName",
						"type": "varchar"
					},
					{
						"name": "WeekOfYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WeekName",
						"type": "varchar"
					},
					{
						"name": "MonthOfYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MonthName",
						"type": "varchar"
					},
					{
						"name": "CalendarQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CalendarQuarterName",
						"type": "varchar"
					},
					{
						"name": "CalendarYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalMonthName",
						"type": "varchar"
					},
					{
						"name": "FiscalQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalQuarterName",
						"type": "varchar"
					},
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dates"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/countryParquetazsql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "testAzureDataLakeStorage1test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "azuresqlcont"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/testAzureDataLakeStorage1test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/covid19metricsParquetazsql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "testAzureDataLakeStorage1test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "azuresqlcont"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/testAzureDataLakeStorage1test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/covidpolicyParquetcosmosdb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "testAzureDataLakeStorage1test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "azuredbcont"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/testAzureDataLakeStorage1test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datesParquetazsql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "testAzureDataLakeStorage1test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "azuresqlcont"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/testAzureDataLakeStorage1test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vmParquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "testAzureDataLakeStorage1test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "vmcont"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/testAzureDataLakeStorage1test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vmParquet2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "testAzureDataLakeStorage1test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "vmcont"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/testAzureDataLakeStorage1test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vmParquet3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "testAzureDataLakeStorage1test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "vmcont"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/testAzureDataLakeStorage1test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbNoSql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHIRintegrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIRintegrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testAzureDataLakeStorage1test')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('testAzureDataLakeStorage1test_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('testAzureDataLakeStorage1test_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIRintegrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cases_flow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "covid19metricsParquetazsql",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "vmParquet2",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Country as string,",
						"          CountryCode as string,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp,",
						"          DateKey as integer,",
						"          FullDate as date,",
						"          isWeekDay as boolean,",
						"          DayOfWeek as integer,",
						"          DayOfMonth as integer,",
						"          DayOfQuarter as integer,",
						"          DayOfYear as integer,",
						"          DayName as string,",
						"          WeekOfYear as integer,",
						"          WeekName as string,",
						"          MonthOfYear as integer,",
						"          MonthName as string,",
						"          CalendarQuarter as integer,",
						"          CalendarQuarterName as string,",
						"          CalendarYear as integer,",
						"          FiscalMonth as integer,",
						"          FiscalMonthName as string,",
						"          FiscalQuarter as integer,",
						"          FiscalQuarterName as string,",
						"          FiscalYear as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: true,",
						"     format: 'parquet') ~> source1",
						"source(output(",
						"          Country as string,",
						"          CountryCode as string,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp,",
						"          DateKey as integer,",
						"          FullDate as date,",
						"          isWeekDay as boolean,",
						"          DayOfWeek as integer,",
						"          DayOfMonth as integer,",
						"          DayOfQuarter as integer,",
						"          DayOfYear as integer,",
						"          DayName as string,",
						"          WeekOfYear as integer,",
						"          WeekName as string,",
						"          MonthOfYear as integer,",
						"          MonthName as string,",
						"          CalendarQuarter as integer,",
						"          CalendarQuarterName as string,",
						"          CalendarYear as integer,",
						"          FiscalMonth as integer,",
						"          FiscalMonthName as string,",
						"          FiscalQuarter as integer,",
						"          FiscalQuarterName as string,",
						"          FiscalYear as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: true,",
						"     format: 'parquet') ~> source2",
						"source1, source2 union(byName: true)~> union1",
						"union1 select(mapColumn(",
						"          Country,",
						"          CountryCode,",
						"          Latitude,",
						"          Longitude,",
						"          ID,",
						"          Updated,",
						"          Confirmed,",
						"          Confirmed_Change,",
						"          Deaths,",
						"          Deaths_Change,",
						"          Recovered,",
						"          Recovered_Change,",
						"          ISO2,",
						"          ISO3,",
						"          Country_Region,",
						"          load_time,",
						"          DateKey,",
						"          FullDate,",
						"          isWeekDay,",
						"          DayOfWeek,",
						"          DayOfMonth,",
						"          DayOfQuarter,",
						"          DayOfYear,",
						"          DayName,",
						"          WeekOfYear,",
						"          WeekName,",
						"          MonthOfYear,",
						"          MonthName,",
						"          CalendarQuarter,",
						"          CalendarQuarterName,",
						"          CalendarYear,",
						"          FiscalMonth,",
						"          FiscalMonthName,",
						"          FiscalQuarter,",
						"          FiscalQuarterName,",
						"          FiscalYear",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['cases.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/covid19metricsParquetazsql')]",
				"[concat(variables('factoryId'), '/datasets/vmParquet2')]",
				"[concat(variables('factoryId'), '/datasets/Parquet2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dates_flow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "covid19metricsParquetazsql",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Country as string,",
						"          CountryCode as string,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp,",
						"          DateKey as integer,",
						"          FullDate as date,",
						"          isWeekDay as boolean,",
						"          DayOfWeek as integer,",
						"          DayOfMonth as integer,",
						"          DayOfQuarter as integer,",
						"          DayOfYear as integer,",
						"          DayName as string,",
						"          WeekOfYear as integer,",
						"          WeekName as string,",
						"          MonthOfYear as integer,",
						"          MonthName as string,",
						"          CalendarQuarter as integer,",
						"          CalendarQuarterName as string,",
						"          CalendarYear as integer,",
						"          FiscalMonth as integer,",
						"          FiscalMonthName as string,",
						"          FiscalQuarter as integer,",
						"          FiscalQuarterName as string,",
						"          FiscalYear as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: true,",
						"     format: 'parquet') ~> source1",
						"source1 select(mapColumn(",
						"          Country,",
						"          CountryCode,",
						"          Latitude,",
						"          Longitude,",
						"          ID,",
						"          Updated,",
						"          Confirmed,",
						"          Confirmed_Change,",
						"          Deaths,",
						"          Deaths_Change,",
						"          Recovered,",
						"          Recovered_Change,",
						"          ISO2,",
						"          ISO3,",
						"          Country_Region,",
						"          load_time,",
						"          DateKey,",
						"          FullDate,",
						"          isWeekDay,",
						"          DayOfWeek,",
						"          DayOfMonth,",
						"          DayOfQuarter,",
						"          DayOfYear,",
						"          DayName,",
						"          WeekOfYear,",
						"          WeekName,",
						"          MonthOfYear,",
						"          MonthName,",
						"          CalendarQuarter,",
						"          CalendarQuarterName,",
						"          CalendarYear,",
						"          FiscalMonth,",
						"          FiscalMonthName,",
						"          FiscalQuarter,",
						"          FiscalQuarterName,",
						"          FiscalYear",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['dates.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/covid19metricsParquetazsql')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deaths_flow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "covid19metricsParquetazsql",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "vmParquet2",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet3",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Country as string,",
						"          CountryCode as string,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp,",
						"          DateKey as integer,",
						"          FullDate as date,",
						"          isWeekDay as boolean,",
						"          DayOfWeek as integer,",
						"          DayOfMonth as integer,",
						"          DayOfQuarter as integer,",
						"          DayOfYear as integer,",
						"          DayName as string,",
						"          WeekOfYear as integer,",
						"          WeekName as string,",
						"          MonthOfYear as integer,",
						"          MonthName as string,",
						"          CalendarQuarter as integer,",
						"          CalendarQuarterName as string,",
						"          CalendarYear as integer,",
						"          FiscalMonth as integer,",
						"          FiscalMonthName as string,",
						"          FiscalQuarter as integer,",
						"          FiscalQuarterName as string,",
						"          FiscalYear as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: true,",
						"     format: 'parquet') ~> source1",
						"source(output(",
						"          Country as string,",
						"          CountryCode as string,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp,",
						"          DateKey as integer,",
						"          FullDate as date,",
						"          isWeekDay as boolean,",
						"          DayOfWeek as integer,",
						"          DayOfMonth as integer,",
						"          DayOfQuarter as integer,",
						"          DayOfYear as integer,",
						"          DayName as string,",
						"          WeekOfYear as integer,",
						"          WeekName as string,",
						"          MonthOfYear as integer,",
						"          MonthName as string,",
						"          CalendarQuarter as integer,",
						"          CalendarQuarterName as string,",
						"          CalendarYear as integer,",
						"          FiscalMonth as integer,",
						"          FiscalMonthName as string,",
						"          FiscalQuarter as integer,",
						"          FiscalQuarterName as string,",
						"          FiscalYear as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: true,",
						"     format: 'parquet') ~> source2",
						"source1, source2 union(byName: true)~> union1",
						"union1 select(mapColumn(",
						"          Country,",
						"          CountryCode,",
						"          Latitude,",
						"          Longitude,",
						"          ID,",
						"          Updated,",
						"          Confirmed,",
						"          Confirmed_Change,",
						"          Deaths,",
						"          Deaths_Change,",
						"          Recovered,",
						"          Recovered_Change,",
						"          ISO2,",
						"          ISO3,",
						"          Country_Region,",
						"          load_time,",
						"          DateKey,",
						"          FullDate,",
						"          isWeekDay,",
						"          DayOfWeek,",
						"          DayOfMonth,",
						"          DayOfQuarter,",
						"          DayOfYear,",
						"          DayName,",
						"          WeekOfYear,",
						"          WeekName,",
						"          MonthOfYear,",
						"          MonthName,",
						"          CalendarQuarter,",
						"          CalendarQuarterName,",
						"          CalendarYear,",
						"          FiscalMonth,",
						"          FiscalMonthName,",
						"          FiscalQuarter,",
						"          FiscalQuarterName,",
						"          FiscalYear",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Country as string,",
						"          CountryCode as string,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp,",
						"          DateKey as integer,",
						"          FullDate as date,",
						"          isWeekDay as boolean,",
						"          DayOfWeek as integer,",
						"          DayOfMonth as integer,",
						"          DayOfQuarter as integer,",
						"          DayOfYear as integer,",
						"          DayName as string,",
						"          WeekOfYear as integer,",
						"          WeekName as string,",
						"          MonthOfYear as integer,",
						"          MonthName as string,",
						"          CalendarQuarter as integer,",
						"          CalendarQuarterName as string,",
						"          CalendarYear as integer,",
						"          FiscalMonth as integer,",
						"          FiscalMonthName as string,",
						"          FiscalQuarter as integer,",
						"          FiscalQuarterName as string,",
						"          FiscalYear as integer",
						"     ),",
						"     format: 'parquet',",
						"     partitionFileNames:['deaths.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/covid19metricsParquetazsql')]",
				"[concat(variables('factoryId'), '/datasets/vmParquet2')]",
				"[concat(variables('factoryId'), '/datasets/Parquet3')]"
			]
		}
	]
}